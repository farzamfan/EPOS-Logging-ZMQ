#store to properties file
#Mon Jun 22 11:48:51 CEST 2020

### Dataset ###
#The folder name in the datasets path. Make sure it has no spaces, tabs or newlines (alphanum and underscore preferred)
dataset=gaussian
### Basic epos properties ###
# any integer > 0
numSimulations=1
# any integer > 0
numIterations=40
# any integer > 0
numAgents=10
# any integer > 0
numPlans=10
# any integer > 0
numChildren=2
# exact dimensionality from the dataset
planDim=100
### Shuffle seeds ###
# initial agent structure before reorganization occurs, any integer > 0
shuffle=0
# path to a file containing permutation of indices, need its strucure: sphinx one column: integer index in each row
shuffle_file="permutation.csv"
### Multi-objective Cost Weights ###
# Number of supported objectives: 3
# Efficiency objective: 1-alpha-beta
# Fairness objective: alpha
# Discomfort objective: beta
# (1-alpha-beta)*inefficiency + alpha*unfairness + beta*discomfort
# "alpha,beta", e.g. "0.3,0.7" for alpha=0.3 and beta=0.7
# this needs to be removed actually
numberOfWeights = 2 
# Weights are in string format, separated by ","
weightsString = "0.0,0.0"
### Reorganization strategy ###
# possible values: periodically, convergence, globalCostReduction, never. never_strategy: never does reorganization
strategy=never
# any integer > 0, if "periodically" strategy is chosen
periodically.reorganizationPeriod=3
# any positive integer (>0), if "convergence" strategy is chosen, the iteration at which the selections will be memorized to be sued after the following reorganization
convergence.memorizationOffset=5
# double from [0, 1]
globalCost.reductionThreshold=0.5
# any integer. Keep the same seed to reproduce experiment results, what random permutations each strategy will explore, result reproducability
strategy.reorganizationSeed=0
#sphinx
#vector target for global response same dimensionality as plan
#filepath
goalSignalPath=default
# Values: "VAR", "RSS", "XCORR", "RMSE"
# Goal signal is ignored in funcitons with only global response as input, e.g. var
globalCostFunction=VAR
# Values: "STD", "UNIT-LENGTH", "MIN-MAX" ( only for RSS).
scaling="MIN-MAX"
# Values: "INDEX", "DISC", "PREF"
localCostFunction="INDEX"
### Loggers ###
logger.GlobalCostLogger = true
logger.LocalCostMultiObjectiveLogger = true
logger.TerminationLogger = true
logger.SelectedPlanLogger = true
logger.GlobalResponseVectorLogger = true
logger.PlanFrequencyLogger = true
logger.UnfairnessLogger = true
logger.GlobalComplexCostLogger = true
logger.WeightsLogger = true
logger.ReorganizationLogger = true
logger.VisualizerLogger = true
#Code related logger for debugging and checks
# please check here https://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html. For experiments "SEVERE" is preferred
logLevel="SEVERE"
#############
#live setting
#############
#in case numAgents < number of agents in the dataset, initiate add join new agents randomly
randomiseUsers=false
#maximum number of agents joining/leaving at once= numAgents/(1+joinLeaveRate)
joinLeaveRate=19
#max number of runs per each simulation
maxNumRuns=50000
#after each epoch, an agent joins/leaves with probability= 1/(1+userChangeProb)
userChangeProb=9
UserPeerID=-200
EPOSRequesterIP=127.0.0.1
GateWayPort=12345
#after each epoch, each agent changes its weights with probability= 1/(1+newWeightProb)
newWeightProb=9
#given userChange=true, the minimum number of agents at any point in the system
minNumPeers=150
bootstrapPort=12000 
persistenceDaemonPort=7433
UserPort=15545
#after each epoch, the global cost function changes (system-wide) with probability= 1/(1+GCFChangeProb)
GCFChangeProb=9
#number of agents in the dataset
dataSetSize=2778
EPOSRequesterPort=54321
persistenceClientOutputQueueSize=1000
#maximumn number of simulations, after which it turns off
maxSimulations=2000
#after each epoch, each agent changes its plans with probability= 1/(1+newPlanProb)
newPlanProb=9
GateWayIP=127.0.0.1
#boolean flag: users changing their plans
planChange=false
persistenceDaemonIP=127.0.0.1
sleepSecondBetweenRuns=15
#boolean flag: users changing their weights
weightChange=false
EPOSRequesterPeerID=-100
GateWayPeerID=-300
#given userChange=true, the maximum number of agents at any point in the system
maxNumPeers=250                                                                                                             
UserIP=127.0.0.1
#boolean flag: users join/leave
userChange=false
